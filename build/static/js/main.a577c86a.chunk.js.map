{"version":3,"sources":["components/Loader/Loader.js","components/Table/Table.js","components/DataDetails/DataDetails.js","components/ModeSelector/ModeSelector.js","components/TableSearch/TableSearch.js","components/HomeButton/HomeButton.js","App.js","index.js"],"names":["Loader","className","role","Table","props","onClick","sortColum","sortField","dirSort","data","map","item","getDetails","id","firstName","lastName","email","phone","colSpan","style","textAlign","DataDetails","person","value","description","readOnly","address","streetAddress","city","state","zip","ModSelector","onSelect","TableSearch","useState","setValue","type","onChange","e","target","onKeyDown","code","onSearch","HomeButton","goHome","App","isModeSelected","setisModeSelected","setData","setPerson","dataDetailsActive","setDataDetailsActive","load","setLoad","setdirSort","setSortField","pageSelect","setPageSelect","search","setSearch","url","a","fetch","response","json","data_","_","orderBy","alert","filterData","filter","toLowerCase","includes","toString","pageCount","Math","ceil","length","displayData","chunk","dataSort","concat","previousLabel","aria-hidden","nextLabel","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageClassName","pageLinkClassName","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page","selected","containerClassName","subContainerClassName","activeClassName","forcePage","fetchData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a577c86a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n            <div className=\"spinner-border\" role=\"status\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nexport default function Table(props){\r\n    return(\r\n        <table className=\"table table-dark table-striped mt-4\">\r\n            <thead>\r\n                <tr>\r\n                    <th onClick={()=>props.sortColum('id')}>\r\n                        ID {props.sortField ==='id'?\r\n                            props.dirSort === 'asc' ? <span>&#9660;</span>:<span>&#9650;</span>\r\n                            :null}\r\n                    </th>\r\n                    <th onClick={()=>props.sortColum('firstName')}>\r\n                        First Name {props.sortField ==='firstName'?\r\n                            props.dirSort === 'asc' ? <span>&#9660;</span>:<span>&#9650;</span>\r\n                            :null}\r\n                    </th>\r\n                    <th onClick={()=>props.sortColum('lastName')}>\r\n                        Last Name {props.sortField ==='lastName'?\r\n                            props.dirSort === 'asc' ? <span>&#9660;</span>:<span>&#9650;</span>\r\n                            :null}\r\n                    </th>\r\n                    <th onClick={()=>props.sortColum('email')}>\r\n                        Email {props.sortField ==='email'?\r\n                            props.dirSort === 'asc' ? <span>&#9660;</span>:<span>&#9650;</span>\r\n                            :null}\r\n                    </th>\r\n                    <th onClick={()=>props.sortColum('phone')}>\r\n                        Phone {props.sortField ==='phone'?\r\n                            props.dirSort === 'asc' ? <span>&#9660;</span>:<span>&#9650;</span>\r\n                            :null}\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {!(typeof props.data==='undefined')?\r\n                    (props.data.map(item =>(\r\n                        <tr key={item.id+item.phone} onClick={()=>props.getDetails(item)}>\r\n                            <th>{item.id}</th>\r\n                            <td>{item.firstName}</td>\r\n                            <td>{item.lastName}</td>\r\n                            <td>{item.email}</td>\r\n                            <td>{item.phone}</td>\r\n                        </tr>\r\n                    )))\r\n                : <tr>\r\n                    <th colSpan=\"5\" style={{ textAlign: 'center'}}>Ничего не найдено</th>\r\n                </tr>   \r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n} \r\n\r\n","import React from 'react'\r\n\r\nexport default function DataDetails(props){\r\n    return (\r\n        \r\n        <div className=\"card mb-4\">\r\n            <div className=\"card-body\">\r\n                Выбран пользователь <b>{props.person.firstName+' '+props.person.lastName}</b><br/>\r\n                Описание:<br/>\r\n                <textarea className=\"form-control\" value={props.person.description} readOnly></textarea>\r\n                <br/>Адрес проживания: <b>{props.person.address.streetAddress}</b>\r\n                <br/>Город: <b>{props.person.address.city}</b>\r\n                <br/>Провинция/штат: <b>{props.person.address.state}</b>\r\n                <br/>Индекс: <b>{props.person.address.zip}</b>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ModSelector(props){\r\n    const smallUrl = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n    const bigUrl = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h2 className=\"text-center mb-4\">Выберете размер загружаемых данных!</h2>\r\n            \r\n                <button onClick={()=>props.onSelect(smallUrl)} className=\"btn btn-primary btn-lg btn-block\">32 элемента</button>\r\n                <button onClick={()=>props.onSelect(bigUrl)} className=\"btn btn-primary btn-lg btn-block\">1000 элементов</button>\r\n            \r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TableSearch(props){\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n\r\n    function valueChangeHandler(e){\r\n        setValue(e.target.value)\r\n    }\r\n    function onSearchKeyDown(e){\r\n        if(e.code === 'Enter'){\r\n            props.onSearch(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-group mb-3 mt-4\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                onChange={valueChangeHandler}\r\n                onKeyDown={onSearchKeyDown}\r\n                value={value}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={()=>props.onSearch(value)}\r\n                >Найти</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function HomeButton(props){\r\n    return (<button \r\n                className=\"btn btn-secondary mt-4\"\r\n                onClick={props.goHome}\r\n            >На главную</button>\r\n        );\r\n}","import React, {useState, Fragment} from 'react'\nimport Loader from './components/Loader/Loader'\nimport Table from './components/Table/Table';\nimport _ from 'lodash'\nimport DataDetails from './components/DataDetails/DataDetails';\nimport ModSelector from './components/ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\nimport TableSearch from './components/TableSearch/TableSearch';\nimport HomeButton from './components/HomeButton/HomeButton';\n\n\n\nfunction App() {\n  const [isModeSelected, setisModeSelected] = useState(false); // режим выбора загрузки данных(32 или 1000 обьектов)\n  const [data, setData] = useState([]);\n  const [person, setPerson] = useState(); //данные выбраннго человека для блока с детальным описанием \n  const [dataDetailsActive, setDataDetailsActive] = useState(false); //пока false блок с детальным описанием не выводится\n  const [load, setLoad] = useState(true); // выводить не выводит индикатор загрузки\n  const [dirSort, setdirSort ] = useState('asc'); //desc = сортировка по возрастанию или по убыванию\n  const [sortField, setSortField ] = useState('id');//столбец по которому выбрана сортировка\n  const [pageSelect, setPageSelect] = useState(0); //номер выбранной страницы в пагинаторе\n  const [search, setSearch] = useState('');\n  const pageSize = 50; //кол-во эл-ов в таблице на 1 странице пагинатора\n\n\n\n\n  //загрузка данных по выбранной 'url'(32 или 1000 объектов)\n  function modeSelectHandler(url){\n    setisModeSelected(true)\n    fetchData(url)    \n  }\n\n  async function fetchData(url){\n    try {\n      const response = await fetch(url);\n      const data_ = await response.json();\n\n      //console.log('load')\n      setData(_.orderBy(data_,sortField,dirSort));\n      setdirSort('desc')\n      setLoad(false)\n    } catch (error) {\n      setisModeSelected(false)\n      alert('Не удалось получить данные с сервера!')\n    }\n  }\n\n\n  //сортировка массива по выбранному столбцу 'sortField'\n  function sortColum(sortField){\n    const dataSort = data.concat();\n\n    setData(_.orderBy(dataSort, sortField, dirSort));\n    dirSort==='asc'? setdirSort('desc') : setdirSort('asc');\n    setSortField(sortField);\n  }\n  \n  //вывод блока под таблицей с детальным описанием выбранного обьект 'item'\n  function getDetails(item){\n    setPerson(item);\n    setDataDetailsActive(true);\n  }\n\n  function handlePageClick(page){\n    setPageSelect(page.selected);\n  }\n  \n  function searchHandler(search){\n    setSearch(search);\n    setPageSelect(0);\n  }\n\n  function getFilterData(){\n    if(!search){\n      return data;\n    }\n\n    const dataSearch = data.filter(item=>{\n      return item['firstName'].toLowerCase().includes(search.toLowerCase())\n      || item['lastName'].toLowerCase().includes(search.toLowerCase())\n      || item['email'].toLowerCase().includes(search.toLowerCase())\n      || item['phone'].toLowerCase().includes(search.toLowerCase())\n      || item['id'].toString().toLowerCase().includes(search.toLowerCase())\n    });\n\n    return dataSearch;\n  }\n\n  //возврат на начальный этап выбора загрузки массива (32 элемента или 1000)\n  function goHome(){\n    setisModeSelected(false);\n    setData([]);\n    setLoad(true);\n    setdirSort('asc');\n    setSortField('id');\n    setPageSelect(0);\n    setSearch('');\n  }\n\n  const filterData = getFilterData();\n  const pageCount = Math.ceil(_.orderBy(filterData,sortField,dirSort).length/50);\n  const displayData = _.chunk(filterData,pageSize)[pageSelect];\n\n\n  if(!isModeSelected){\n    return (\n      <div className=\"container\">\n        <ModSelector onSelect={modeSelectHandler}/>\n      </div>\n    );\n  }else{\n    return (\n      <div className=\"container\">\n        {load === true  ? <Loader/>:\n        <Fragment>\n          <HomeButton goHome={goHome} />\n          <TableSearch onSearch={searchHandler}/>\n          <Table \n            data={displayData} \n            sortColum={sortColum} \n            dirSort={dirSort}\n            sortField={sortField}\n            getDetails={getDetails}/>\n        </Fragment>\n        }\n        {data.length>pageSize \n          ? <ReactPaginate\n            previousLabel={<span aria-hidden=\"true\">&laquo;</span>}\n            nextLabel={<span aria-hidden=\"true\">&raquo;</span>}\n            previousClassName={'page-item'}\n            previousLinkClassName={'page-link'}\n            nextClassName={'page-item'}\n            nextLinkClassName={'page-link'}\n            pageClassName={'page-item'}\n            pageLinkClassName={'page-link'}\n            breakLabel={'...'}\n            breakClassName={'page-link'}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={3}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n            forcePage={pageSelect}\n          />\n          :null}\n        {dataDetailsActive ? <DataDetails person={person}/>:null}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}